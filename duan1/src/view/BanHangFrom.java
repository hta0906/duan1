/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import Class.BAN;
import Class.DatBan;
import Class.Menu;
import Class.Mon;
import Class.Thucuong;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import DAO.AccountDAO;
import DAO.BanDAO;
import DAO.ThucUongDAO;
import DAO.menuDAO;
import DAO.tableDAO;
import JDBC.JDBCHelper;
import JDBC.JDBCUitil;
import JDBC.ThongBao;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author Admin
 */
public class BanHangFrom extends javax.swing.JFrame {

    int id = -1;
//    tableDAO dao = new tableDAO();
//    menuDAO menudao=new menuDAO();
    BanDAO dao=new BanDAO();
    ThucUongDAO TUdao=new ThucUongDAO();
  
        DefaultComboBoxModel<Mon> comboBoxModel;
        DefaultTableModel tableModelTables;
        DefaultTableModel tableModelDrinks;
    int TongTien=0;
   
//      DefaultComboBoxModel<Thucuong> comboBoxModel;
     
    
    /**
     * Creates new form BanHangFrom
     */
    public BanHangFrom() {
        initComponents();
      fillTable();
 
       fillcomboxNC();

   tableModelDrinks = new DefaultTableModel();
        txtDisplay.setText("xin chao:"+ AccountDAO.getInstance().GetAccount().getTenNhanVien());
//       comboBoxModel=new DefaultComboBoxModel<Thucuong>();
//        cboDrinks.setModel(comboBoxModel);
        
         
       
        
    }

    void fillTable() {
        DefaultTableModel model = (DefaultTableModel) tblTables.getModel();
        model.setRowCount(0);
        try {
            List<DatBan> listTable = dao.selectALL();
            for (int i = 0; i < listTable.size(); i++) {
                DatBan ban = listTable.get(i);
                Object[] dt = { ban.getMABAN(), ban.getTRANGTHAI()};
                model.addRow(dt);
            }
        } catch (Exception e) {
            ThongBao.alert(this, "loi truy van du lieu");
        }
    }
    void fillTableNuoc() {
       tableModelDrinks.setRowCount(0);
       List<Menu>list=menuDAO.getInstance().GetListMenuByTableId(id);
    
                for (int i = 0; i < list.size(); i++) {
                        Menu menu = list.get(i);
                        Object[] dt = {i + 1, menu.getTenNuoc(), menu.getGia(), menu.getSoLuong(), menu.getTongTien()};
                        TongTien += menu.getTongTien();
                        tableModelDrinks.addRow(dt);
                }
                txtTotalPrice.setText(TongTien + "");
    }
//    
    void fillcomboxNC(){
         DefaultComboBoxModel model = (DefaultComboBoxModel) cboDrinks.getModel(); //kết nối cbo với model
        model.removeAllElements(); //xóa toàn bộ item
        try {        
          
            List<Thucuong> list=TUdao.selectALL();
            for (Thucuong NC : list) {
                model.addElement(NC);   
            }
        } catch (Exception e) {
            ThongBao.alert(this, "loi truy van");
        }
    }
//     void fillcomboxNC(){
//        List<Thucuong>listnc=TUdao.getthucuong().selectALL();
//         for (Thucuong thucuong : listnc) {
//             comboBoxModel.addElement(thucuong);
//             
//         }
    
     
//    
//    
//   
//
//    /**
//     * This method is called from within the constructor to initialize the form.
//     * WARNING: Do NOT modify this code. The content of this method is always
//     * regenerated by the Form Editor.
//     */
//    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtTotalPrice = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnHome = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTables = new javax.swing.JTable();
        txtDisplay = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        spnAmount = new javax.swing.JSpinner();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtThucUong = new javax.swing.JTable();
        btnPay = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        cboDrinks = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtTotalPrice.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtTotalPrice.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTotalPrice.setText("0");
        txtTotalPrice.setEnabled(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Quản lý bán hàng");

        btnHome.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Go Back_50px.png"))); // NOI18N
        btnHome.setText("Quay lại");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        tblTables.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã bàn", "Trạng thái", "Title 3", "Title 4"
            }
        ));
        tblTables.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTablesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblTables);

        txtDisplay.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtDisplay.setText("jLabel3");

        btnAdd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/plus.png"))); // NOI18N
        btnAdd.setText("Thêm đồ uống");
        btnAdd.setEnabled(false);
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        spnAmount.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        spnAmount.setValue(1);

        txtThucUong.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Tên Món", "Gia", "So luong", "Thanh Tien"
            }
        ));
        jScrollPane2.setViewportView(txtThucUong);

        btnPay.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnPay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/discount.png"))); // NOI18N
        btnPay.setText("Thanh toán");
        btnPay.setEnabled(false);
        btnPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPayActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Tổng tiền");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(spnAmount, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)
                            .addComponent(jLabel1)
                            .addComponent(cboDrinks, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPay)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(cboDrinks, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spnAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnPay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(91, 91, 91))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                    .addComponent(jScrollPane1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed

        dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_btnHomeActionPerformed

    private void tblTablesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTablesMouseClicked
     //    TODO add your handling code here:
//        int row=tblTables.getSelectedRow();
//        btnAdd.setEnabled(true);
//        if ((tblTables.getValueAt(row, 2)+"").equals("Đã đặt")) {
//            btnPay.setEnabled(true);           
//       }else{
//            btnPay.setEnabled(false);
//        }
//        List<BAN> listtable=tableDAO.getInstance().LoadListTables();
//        id=listtable.get(row).getIDBAN();
//        fillTableNuoc();



int row=tblTables.getSelectedRow();
btnAdd.setEnabled(true);
        if ((tblTables.getValueAt(row, 1)+"").equals("còn")) {
            btnPay.setEnabled(true);
            
        }else{
            btnPay.setEnabled(false);
        }
        List<DatBan> listban=dao.selectALL();
        id=listban.get(row).getMABAN();
        fillTableNuoc();
    }//GEN-LAST:event_tblTablesMouseClicked

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
//          int invoiceId = InvoicesDAO.getInstance().GetUncheckInvoiceByTableId(id);
//          Thucuong TC=(Thucuong) cboDrinks.getSelectedItem();
//          if (invoiceId ==-1) {
//              InvoicesDAO.getInstance().Insert(id, AccountDAO.getInstance().GetAccount().getMANHANVIEN());
//              CtHoaDonDAO.getInstance().Insert(TC.getMAMON(),InvoicesDAO.getInstance().GetMaxIdInvoice(),Integer.parseInt(spnAmount.getValue().toString()));
//        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPayActionPerformed
//        int maHD;
//        try {
//           maHD=HDDAO.getVD().selectByid(id);
//           HDDAO.getVD().update(maHD,TongTien);
//        } catch (Exception e) {
//        }
    }//GEN-LAST:event_btnPayActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BanHangFrom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BanHangFrom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BanHangFrom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BanHangFrom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BanHangFrom().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnPay;
    private javax.swing.JComboBox<String> cboDrinks;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner spnAmount;
    private javax.swing.JTable tblTables;
    private javax.swing.JLabel txtDisplay;
    private javax.swing.JTable txtThucUong;
    private javax.swing.JTextField txtTotalPrice;
    // End of variables declaration//GEN-END:variables

//    private void fillTable() {
//         DefaultTableModel model = (DefaultTableModel) tblTables.getModel();
//       model.setRowCount(0);
//        try {
//                      List<BAN> listTable = dao.getInstance().LoadListTables();
//            for (int i = 0; i < listTable.size(); i++) {
//                BAN ban = listTable.get(i);
//                Object[] dt = { i+1,ban.getTenBan(), ban.getTrangThai(),ban.getGhiChu()};
//                model.addRow(dt);
//            }
////        } catch (Exception e) {
////            ThongBao.alert(this, "loi truy van du lieu");
////        }
//            
//            
//        } catch (Exception e) {
//        }
//    }

//    private void fillTableNuoc() {
//          tableModelDrinks.setRowCount(0);
//       
//           List<Menu> listNC = menuDAO.getInstance().GetListMenuByTableId(id);
//           for (int i = 0; i < listNC.size(); i++) {
//               Menu me = listNC.get(i);
//               Object[] dt={i+1,me.getTenNuoc(),me.getGia(),me.getSoLuong(),me.getTongTien()      
//               };
//               TongTien+= me.getTongTien();
//               tableModelDrinks.addRow(dt);         
//            }
//           txtTotalPrice.setText(TongTien+"");      
//    }

//    private void fillcomboxNC() {
//        List <Mon> listmon=MonDAO.getInstance().GetListDrink();
//        for (Mon mon : listmon) {
//            comboBoxModel.addElement(mon);           
//        }
//            
//        }
    
}


